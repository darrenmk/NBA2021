citation("tidyverse")
citation("ggplot2")
seq(1,10,2)
seq(1,5)
seq(0,1000,10)
length(seq(0,1000,10))
seq2 <- seq(0,10,10)
seq()
seq2
seq1 <- seq(1,5)
seq1+seq2
seq2 <- rep(seq(1,10,10)5)
seq2 <- rep(seq(1,10,10),5)
seq2 <- rep(seq(0,10,10),5)
seq2 <- seq(0,10,10)
seq3 <- c(0,0,0,0,0,10,10,10,10,10)
seq1 <- rep(seq(1,5),2)
seq4 <- seq1 + seq3
seq1 <- rep(seq(1,5),100)
seq5 <- seq(0,1000,10)
rep(seq5,times=5)
rep(seq5,each=5)
seq2 <- seq(0,1000,by=10,each=5)
seq2 <- seq(0,1000,10,each=5)
seq1 <- seq(0,1000,10)
seq2 <- seq(seq1,each=5)
seq2 <- rep(seq(0,1000,10),each=5)
seq2 <- rep(seq(0,1000,10),each=5)
seq1 <- rep(seq(1,5),50)
seq1 <- rep(seq(1,5),101)
seq3 <- seq1 + seq2
seq3
seq1 <- rep(seq(1,5),101)
seq2 <- rep(seq(0,1000,10),each=5)
seq3 <- seq1 + seq2
seq <- rep(seq(1,5),101) + rep(seq(0,1000,10),each=5)
x = c(5,3,0,4)
y = c(4,4,1,3)
lm1 = lm(y~x)
lm1
plot(x,y)
abline(lm1)
lm2 <- lm(0~1)
abline(lm2)
abline(lm2)
lm2
data("sleepstudy")
load(lme4)
install.packages("lme4")
load(lme4)
package(lme4)
library(lme4)
sleepstudy <- data("sleepstudy")
data("sleepstudy")
force(sleepstudy)
View(sleepstudy)
View(sleepstudy)
with(sleepstudy(plot(Days,Reaction)))
View(sleepstudy)
with(sleepstudy(plot(Days,Reaction)))
plot(sleepstudy$Days,sleepstudy$Reaction)
with(sleepstudy(plot(Days,Reaction)))
with(sleepstudy,plot(Days,Reaction))
plot(sleepstudy$Days,sleepstudy$Reaction)
aov1 <- anova(lm1)
lm1 <- lm(Reaction~Days, data = sleepstudy)
aov1 <- anova(lm1)
aov1
ggplot(sleepstudy, aes(x=Days, y=Reaction) + geom_point() + geom_smooth(method="lm"))
data("ggplot2")
library(ggplot2)
ggplot(sleepstudy, aes(x=Days, y=Reaction) + geom_point() + geom_smooth(method="lm"))
ggplot(sleepstudy, aes(x=Days, y=Reaction)) + geom_point() + geom_smooth(method="lm")
with(sleepstudy,plot(Days,Reaction)) # same function
ggplot(sleepstudy,aes(x=Days,y=Reaction)) + geom_smooth(method = "lm",level = 0.95) +
geom_point() + facet_wrap(~Subject, nrow = 3, ncol = 6)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
anova(lm1, lmer1)
anova(lm1, lmer1)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
sqrt(sum(residuals(lm1)^2)/(dim(sleepstudy)[1]-2))
sqrt(sum(resid(lmer1)^2)/(dim(sleepstudy)[1]-2))
dim(sleepstudy)[1]
anova(lm1, lmer1)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
lm1 <- lm(Reaction~Days, data = sleepstudy)
anova(lm1, lmer1)
lm1 <- lm(Reaction~Days, data = sleepstudy)
anova1 <- anova(lm1) # anova is the same thing as a linear model, just more interpretable
#   however, there are 2 issues with just running a simple linear model here
#   what are some of the assumptions behind the linear regression?
ggplot(sleepstudy,aes(x=Days,y=Reaction)) + geom_smooth(method = "lm",level = 0.95) +
geom_point() + facet_wrap(~Subject, nrow = 3, ncol = 6)
#   most individuals have an increasing RT but each subject differs in their SLOPE and INTERCEPT
#   how can we account for this?
#   this is where the concept of fixed and random effects become important
lm2 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
#   how can we evaluate how well each of these models fits our data?
RMSE1 <- sqrt(sum(residuals(lm1)^2)/(dim(sleepstudy)[1]-2))
RMSE2 <- sqrt(sum(resid(lm2)^2)/(dim(sleepstudy)[1]-2))
anova(lm1, lm2)
options(contrasts=c("contr.sum","contr.poly"))
setwd('E:\\Documents\\Projects\\React4\\Scripts')
library(R.matlab)
library(ggplot2)
library(ggpubr)
library(ggcorrplot)
### Load matlab variables and subject data ###
mat <- readMat("React4Variables.mat")
subjectsAll <- read.csv("React4Subjects.csv")
keepSubjects <- !(subjectsAll$poorData==1 | subjectsAll$below90==1)
subjects <- subjectsAll[keepSubjects,] #filter out unwanted subjects
n <- dim(subjects)[1]
subjectRT <- mat[["subjectRT"]]
subjectMR <- mat[["subjectMR"]]
subjectRMV <- mat[["subjectRMV"]]
subjectCRE <- mat[["subjectCRE"]]
mat <- readMat("React4Variables.mat")
ls
dir
options(contrasts=c("contr.sum","contr.poly"))
setwd('E:\\Documents\\Projects\\NBA2021\\Scripts')
library(R.matlab)
library(ggplot2)
library(ggpubr)
library(ggcorrplot)
### Load matlab variables and subject data ###
mat <- readMat("React4Variables.mat")
subjectsAll <- read.csv("React4Subjects.csv")
keepSubjects <- !(subjectsAll$poorData==1 | subjectsAll$below90==1)
subjects <- subjectsAll[keepSubjects,] #filter out unwanted subjects
n <- dim(subjects)[1]
options(contrasts=c("contr.sum","contr.poly"))
setwd('E:\\Documents\\Scripts\\NBA2021')
library(R.matlab)
library(ggplot2)
library(ggpubr)
library(ggcorrplot)
### Load matlab variables and subject data ###
mat <- readMat("React4Variables.mat")
subjectsAll <- read.csv("React4Subjects.csv")
keepSubjects <- !(subjectsAll$poorData==1 | subjectsAll$below90==1)
subjects <- subjectsAll[keepSubjects,] #filter out unwanted subjects
n <- dim(subjects)[1]
options(contrasts=c("contr.sum","contr.poly"))
setwd('D:\\Data\\Documents\\Scripts\\NBA2021')
library(R.matlab)
library(ggplot2)
library(ggpubr)
library(ggcorrplot)
### Load matlab variables and subject data ###
mat <- readMat("React4Variables.mat")
subjectsAll <- read.csv("React4Subjects.csv")
keepSubjects <- !(subjectsAll$poorData==1 | subjectsAll$below90==1)
subjects <- subjectsAll[keepSubjects,] #filter out unwanted subjects
n <- dim(subjects)[1]
subjectRT <- mat[["subjectRT"]]
subjectMR <- mat[["subjectMR"]]
subjectRMV <- mat[["subjectRMV"]]
subjectCRE <- mat[["subjectCRE"]]
View(subjectCRE)
View(subjects)
subjectData <- with(subjects, data.frame("Age" = age, "Mean RT" = rowMeans(subjectRT,na.rm=1), "Vestibular MR" = subjectMR[,1], "Mean RMV" = rowMeans(subjectRMV,na.rm=1), "Motion Sickness" = motionSick, "Exercise Hours" = exerciseHours, "Video Game Hours" = videoGameHours, "Driving Hours" = drivingHours, "Computer Hours" = computerHours, "Attention Diff" = attentionBefore-attentionAfter, "Energy Diff" = energyBefore-energyAfter, "Balance After" = balanceAfter))
View(subjectData)
View(subjectRT)
View(subjectCRE)
View(subjects)
## Figure 4b: Age & MR
dataMR <- data.frame("age" = subjects$age, "MR0" = round(subjectMR[,1],2), "MR1" = round(subjectMR[,2],2), "MR2" = round(subjectMR[,3],2), "MR3" = round(subjectMR[,4],2), "MR4" = round(subjectMR[,5],2), "MR5" = round(subjectMR[,6],2), "MR6" = round(subjectMR[,7],2))
meltMR <- reshape2::melt(dataMR,id.var="age",na.rm=1)
cond <- c(rep("Vest",n),rep("Comb",n*5),rep("Vis",n))
cond <- factor(cond,levels=c("Vest","Comb","Vis"))
meltMR$cond <- cond
meltMR$subj <- rep(seq(1,n),7)
colnames(meltMR) <- c("age", "soa", "mr", "cond", "subj")
View(meltMR)
getwd()
getwd()
library(aod)
library (readxl)
library(ggplot2)
library(multcomp)
library(lme4)
library(nlme)
#setwd('/Users/yaz/Desktop/NBA2021-master')
data<-read.csv("React_Lmer_RT&MR_updated.csv")
data=data[data$subject!=12 & data$subject!=19 & data$subject!=25 & data$subject!=51 & data$subject!=53 & data$subject!=71,]
View(data)
data<-read.csv("React_Lmer_RT&MR_updated.csv")
View(data)
data$age<- as.integer(data$age)
data$subject <- as.integer(data$subject)
data$rt<- as.integer(data$rt)
data$mr<- as.integer(data$mr)
data$cond.rt<-factor(data$cond.rt)
data$cond.mr<-factor(data$cond.mr)
data$drive.hr<- factor(data$drive.hr)
data$computer.hr<- factor(data$computer.hr)
data$game.hr<- factor(data$game.hr)
rt_lmer <- lmer(rt ~ age * cond.rt + (1|subject), data=data)
summary(rt_lmer)
rt_lmer1 <- lmer(rt ~ age * cond.rt + (1+drive.hr|subject) + (1+computer.hr|subject) + (1+game.hr|subject), data=data)
summary(rt_lmer1)
options(contrasts=c("contr.sum","contr.poly"))
#setwd('D:\\Data\\Documents\\Scripts\\NBA2021')
library(R.matlab)
library(ggplot2)
library(ggpubr)
library(ggcorrplot)
### Load matlab variables and subject data ###
mat <- readMat("React4Variables.mat")
subjectsAll <- read.csv("React4Subjects.csv")
keepSubjects <- !(subjectsAll$poorData==1 | subjectsAll$below90==1)
subjects <- subjectsAll[keepSubjects,] #filter out unwanted subjects
n <- dim(subjects)[1]
subjectRT <- mat[["subjectRT"]]
subjectMR <- mat[["subjectMR"]]
subjectRMV <- mat[["subjectRMV"]]
subjectCRE <- mat[["subjectCRE"]]
options(contrasts=c("contr.sum","contr.poly"))
#setwd('D:\\Data\\Documents\\Scripts\\NBA2021')
library(R.matlab)
library(ggplot2)
library(ggpubr)
library(ggcorrplot)
### Load matlab variables and subject data ###
mat <- readMat("React4Variables.mat")
subjectsAll <- read.csv("React4Subjects.csv")
keepSubjects <- !(subjectsAll$poorData==1 | subjectsAll$below90==1)
subjects <- subjectsAll[keepSubjects,] #filter out unwanted subjects
n <- dim(subjects)[1]
subjectRT <- mat[["subjectRT"]]
subjectMR <- mat[["subjectMR"]]
subjectRMV <- mat[["subjectRMV"]]
subjectCRE <- mat[["subjectCRE"]]
## Figure 2. RMV of Race Model Inequality per SOA
grandCDFs <- mat[["grandCDFs"]]
grandRaceModel <- mat[["grandRaceModel"]]
vesCDF <- as.matrix(grandCDFs[1,1,])
visCDF <- as.matrix(grandCDFs[1,7,])
#grandRMV <- mat[["grandRMV"]]
# Import CDF data into a dataframe
cdfData <- data.frame("timecourse" = t(mat[["timecourse"]]), "vesCDF" = vesCDF, "ves50CDF" = as.matrix(c(rep(0,500), vesCDF[1:29501,1])), "ves100CDF" = as.matrix(c(rep(0,1000), vesCDF[1:29001,1])), "visCDF" = visCDF, "vis50CDF" = as.matrix(c(rep(0,500), visCDF[1:29501,1])), "vis100CDF" = as.matrix(c(rep(0,1000), visCDF[1:29001,1])), "soa1CDF" = as.matrix(grandCDFs[1,2,]), "soa2CDF" = as.matrix(grandCDFs[1,3,]), "soa3CDF" = as.matrix(grandCDFs[1,4,]), "soa4CDF" = as.matrix(grandCDFs[1,5,]), "soa5CDF" = as.matrix(grandCDFs[1,6,]), "race1CDF" = as.matrix(grandRaceModel[1,1,]), "race2CDF" = as.matrix(grandRaceModel[1,2,]), "race3CDF" = as.matrix(grandRaceModel[1,3,]), "race4CDF" = as.matrix(grandRaceModel[1,4,]), "race5CDF" = as.matrix(grandRaceModel[1,5,]))
## Figure 2a: -100 ms SOA
cdfPlot1 <- ggplot(cdfData, aes(x=timecourse)) +
geom_line(aes(y=vesCDF,group="A",colour="A")) +
geom_line(aes(y=soa1CDF,group="B",colour="B")) +
geom_line(aes(y=vis100CDF,group="C",colour="C")) +
geom_line(aes(y=race1CDF,group="D",colour="D")) +
geom_ribbon(data=subset(cdfData, 0 <= cdfData & cdfData <= 920), aes(ymin=race1CDF, ymax=soa1CDF), fill="grey80") +
labs(tag="A", x="Time (ms)", y="P(response)") +
annotate("text",x=100,y=0.99,label="-100ms SOA",size=4) +
#annotate("text",x=400,y=0.35,label="RMV: 91.19 ms",size=2) +
scale_colour_discrete(name="Condition",labels=c("Vestibular Cue","Combined","Visual Cue","Race Model Inequality"),guide=guide_legend(nrow=4)) +
scale_x_continuous(breaks=seq(0,2000,by=200), limits=c(0,2000)) +
theme_classic() +
theme(legend.position="none")
#print(cdfPlot1)
## Figure 2b: -50 ms SOA
cdfPlot2 <- ggplot(cdfData, aes(x=timecourse)) +
geom_line(aes(y=vesCDF,group="A",colour="A")) +
geom_line(aes(y=soa2CDF,group="B",colour="B")) +
geom_line(aes(y=vis50CDF,group="C",colour="C")) +
geom_line(aes(y=race2CDF,group="D",colour="D")) +
geom_ribbon(data=subset(cdfData, 0 <= cdfData & cdfData <= 880), aes(ymin=race2CDF, ymax=soa2CDF), fill="grey80") +
labs(tag="B", x="Time (ms)", y="P(response)") +
annotate("text",x=100,y=0.99,label="-50ms SOA",size=4) +
#annotate("text",x=400,y=0.35,label="RMV: 80.38 ms",size=2) +
scale_colour_discrete(name="Condition",labels=c("Vestibular Cue","Combined (-50ms SOA)","Visual Cue (50ms delay)","Race Model Inequality"),guide=guide_legend(nrow=4)) +
scale_x_continuous(breaks=seq(0,2000,by=200), limits=c(0,2000)) +
theme_classic() +
theme(legend.position="none")
#print(cdfPlot2)
## Figure 2c: 0 ms SOA
cdfPlot3 <- ggplot(cdfData, aes(x=timecourse)) +
geom_line(aes(y=vesCDF,group="A",colour="A")) +
geom_line(aes(y=soa3CDF,group="B",colour="B")) +
geom_line(aes(y=visCDF,group="C",colour="C")) +
geom_line(aes(y=race3CDF,group="D",colour="D")) +
geom_ribbon(data=subset(cdfData, 0 <= cdfData & cdfData <= 840), aes(ymin=race3CDF, ymax=soa3CDF), fill="grey80") +
labs(tag="C", x="Time (ms)", y="P(response)") +
annotate("text",x=100,y=0.99,label="0ms SOA",size=4) +
#annotate("text",x=400,y=0.35,label="RMV: 70.76 ms",size=2) +
scale_colour_discrete(name="Condition",labels=c("Vestibular Cue","Combined","Visual Cue","Race Model Inequality"),guide=guide_legend(nrow=4)) +
scale_x_continuous(breaks=seq(0,2000,by=200), limits=c(0,2000)) +
theme_classic() +
theme(legend.position=c(0.9,0.5))
#print(cdfPlot3)
## Figure 2d: 50 ms SOA
cdfPlot4 <- ggplot(cdfData, aes(x=timecourse)) +
geom_line(aes(y=ves50CDF,group="A",colour="A")) +
geom_line(aes(y=soa4CDF,group="B",colour="B")) +
geom_line(aes(y=visCDF,group="C",colour="C")) +
geom_line(aes(y=race4CDF,group="D",colour="D")) +
geom_ribbon(data=subset(cdfData, 0 <= cdfData & cdfData <= 860), aes(ymin=race4CDF, ymax=soa4CDF), fill="grey80") +
labs(tag="D", x="Time (ms)", y="P(response)") +
annotate("text",x=100,y=0.99,label="50ms SOA",size=4) +
#annotate("text",x=400,y=0.35,label="RMV: 72.13 ms",size=2) +
scale_colour_discrete(name="Condition",labels=c("Vestibular Cue (50ms delay)","Combined (50ms SOA)","Visual Cue","Race Model Inequality"),guide=guide_legend(nrow=4)) +
scale_x_continuous(breaks=seq(0,2000,by=200), limits=c(0,2000)) +
theme_classic() +
theme(legend.position="none")
#print(cdfPlot4)
## Figure 2e: 100 ms SOA
cdfPlot5 <- ggplot(cdfData, aes(x=timecourse)) +
geom_line(aes(y=ves100CDF,group="A",colour="A")) +
geom_line(aes(y=soa5CDF,group="B",colour="B")) +
geom_line(aes(y=visCDF,group="C",colour="C")) +
geom_line(aes(y=race5CDF,group="D",colour="D")) +
geom_ribbon(data=subset(cdfData, 0 <= cdfData & cdfData <= 860), aes(ymin=race5CDF, ymax=soa5CDF), fill="grey80") +
labs(tag="E", x="Time (ms)", y="P(response)") +
annotate("text",x=100,y=0.99,label="100ms SOA",size=4) +
#annotate("text",x=400,y=0.35,label="RMV: 57.14 ms",size=2) +
scale_colour_discrete(name="Condition",labels=c("Vestibular Cue (100ms delay)","Combined (100ms SOA)","Visual Cue","Race Model Inequality"),guide=guide_legend(nrow=4)) +
scale_x_continuous(breaks=seq(0,2000,by=200), limits=c(0,2000)) +
theme_classic() +
theme(legend.position="none")
#print(cdfPlot5)
## Figure 2 with 3 panels: -100, 0, and 100 ms SOAs
ggarrange(cdfPlot1, cdfPlot3, cdfPlot5, nrow = 3, ncol = 1)
## Figure 2 with 5 panels: -100, -50, 0, 50, and 100 ms SOAs
ggarrange(cdfPlot1, cdfPlot2, cdfPlot3, cdfPlot4, cdfPlot5, nrow = 5, ncol = 1)
## Figure 3. Grand RT and MR
# Calculating mean and standard error of RT, MR, RMV, and CRE
overallMeanRT <- apply(subjectRT,2,mean,na.rm=1)
overallSeRT <- apply(subjectRT,2,sd,na.rm=1)/sqrt(dim(subjectRT)[1])
overallMeanMR <- apply(subjectMR,2,mean,na.rm=1)
overallSeMR <- apply(subjectMR,2,sd,na.rm=1)/sqrt(dim(subjectMR)[1])
overallMeanRMV <- c(NaN,apply(subjectRMV,2,mean,na.rm=1),NaN)
overallSeRMV <- c(NaN,apply(subjectRMV,2,sd,na.rm=1)/sqrt(dim(subjectRMV)[1]),NaN)
overallMeanCRE <- c(NaN,apply(subjectCRE,2,mean,na.rm=1), NaN)
overallSeCRE <- c(NaN,apply(subjectCRE,2,sd,na.rm=1)/sqrt(dim(subjectCRE)[1]),NaN)
overallSoa <- c("-Inf","-100","-50","0","50","100","Inf")
overallSoa <- factor(overallSoa,levels=c("-Inf","-100","-50","0","50","100","Inf")) # manually order
overallCondition <- c("Vestibular",rep("Combined",5),"Visual")
overallCondition <- factor(overallCondition,levels=c("Vestibular","Combined","Visual")) # manually order
overallMeanMRscaled <- (overallMeanMR) * 1200 # scale MR by (x-50) * 10 to match the RT scale
overallSeMRscaled <- sqrt((overallSeMR^2) * 1200^2) # scale MR by (x-50) * 10 to match the RT scale
overallData <- data.frame(overallMeanRT,overallSeRT,overallMeanMR,overallSeMR,overallMeanMRscaled,overallSeMRscaled,overallMeanCRE,overallSeCRE,overallMeanRMV,overallSeRMV,overallSoa,overallCondition)
## Figure 3: Grand RT and MR
overallRT <- ggplot(overallData,aes(x=overallSoa,y=overallMeanRT,fill=overallSoa)) +
geom_errorbar(aes(ymin=overallMeanMRscaled-overallSeMRscaled, ymax=overallMeanMRscaled+overallSeMRscaled), width=0.15) +
geom_errorbar(aes(ymin=overallMeanRT-overallSeRT, ymax=overallMeanRT+overallSeRT), width=0.15) +
geom_col(colour="black",aes(y=overallMeanMRscaled)) +
geom_point(aes(shape=overallCondition),size=3) +
labs(x = "SOA (ms)", y = "Reaction Time (ms)") +
scale_shape_manual(name="Condition",labels=c("Vestibular Cue", "Combined (SOA)", "Visual Cue"),values=c(23,21,22)) +
scale_fill_manual(name="SOA (ms)",values=c("black","grey15","grey30","grey50","grey70","grey85","white")) +
scale_y_continuous(breaks = seq(600, 1200, by = 100), labels = c(600,"",800,"",1000,"",1200), limits = c(0,1200),
sec.axis=sec_axis(~ ., breaks = seq(0, 600, by = 120), labels=c(0,10,20,30,40,50), name = "Miss Rate (%)")) +
guides(fill=guide_legend(order=2,override.aes=list(shape=(c(23,21,21,21,21,21,22)), col=(c("black","grey15","grey30","grey50","grey70","grey85","white")))), shape=guide_legend(order=1)) +
theme_classic(base_size = 18) +
theme(legend.direction = "horizontal", legend.position=c(0.5,0.82), legend.box="vertical",
legend.key = element_rect(color="black",size=0.3,linetype="dotted"))
print(overallRT)
#ggsave(file="overallRT.eps")
#ggsave(file="overallRT.png")
## Figure 4. Age and DVs
## Figure 4a: Age vs RT
dataRT <- data.frame("age" = subjects$age, "RT0" = subjectRT[,1], "RT1" = subjectRT[,2], "RT2" = subjectRT[,3], "RT3" = subjectRT[,4], "RT4" = subjectRT[,5], "RT5" = subjectRT[,6], "RT6" = subjectRT[,7])
meltRT <- reshape2::melt(dataRT,id.var="age")
cond <- c(rep("Vest",n),rep("Comb",n*5),rep("Vis",n))
cond <- factor(cond,levels=c("Vest","Comb","Vis"))
meltRT$cond <- cond
meltRT$subj <- rep(seq(1,n),7)
meltRT <- meltRT[complete.cases(meltRT),]
colnames(meltRT) <- c("age", "soa", "rt", "cond","subj")
View(meltRT)
rt_lmer1 <- lmer(rt ~ age * cond.rt + (1+drive.hr|age) + (1+computer.hr|age) + (1+game.hr|age) + (1|subject), data=data)
summary(rt_lmer1)
rt_lmer1 <- lmer(rt ~ age * cond.rt + (1+drive.hr+computer.hr+game.hr|age) + + (1|subject), data=data)
summary(rt_lmer1)
rt_lmer1 <- lmer(rt ~ age * cond.rt + (1+drive.hr|age) + (1+computer.hr|age) + (1+game.hr|age) + (1|subject), data=data)
summary(rt_lmer1)
View(data)
data.computer.hr
data$computer.hr
data$computer.hr<- factor(data$computer.hr,levels=c(1,2,3,4,5))
data$computer.hr<- factor(data$computer.hr,levels=c(1,2,3,4,5))
data$computer.hr
data$drive.hr<- factor(data$drive.hr,levels=c(1,2,3,4,5))
data$computer.hr<- factor(data$computer.hr,levels=c(1,2,3,4,5))
data$game.hr<- factor(data$game.hr,levels=c(1,2,3,4,5))
data$game.hr
rt_lmer1 <- lmer(rt ~ age * cond.rt + (1+drive.hr|age) + (1+computer.hr|age) + (1+game.hr|age) + (1|subject), data=data)
summary(rt_lmer1)
