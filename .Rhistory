citation("tidyverse")
citation("ggplot2")
seq(1,10,2)
seq(1,5)
seq(0,1000,10)
length(seq(0,1000,10))
seq2 <- seq(0,10,10)
seq()
seq2
seq1 <- seq(1,5)
seq1+seq2
seq2 <- rep(seq(1,10,10)5)
seq2 <- rep(seq(1,10,10),5)
seq2 <- rep(seq(0,10,10),5)
seq2 <- seq(0,10,10)
seq3 <- c(0,0,0,0,0,10,10,10,10,10)
seq1 <- rep(seq(1,5),2)
seq4 <- seq1 + seq3
seq1 <- rep(seq(1,5),100)
seq5 <- seq(0,1000,10)
rep(seq5,times=5)
rep(seq5,each=5)
seq2 <- seq(0,1000,by=10,each=5)
seq2 <- seq(0,1000,10,each=5)
seq1 <- seq(0,1000,10)
seq2 <- seq(seq1,each=5)
seq2 <- rep(seq(0,1000,10),each=5)
seq2 <- rep(seq(0,1000,10),each=5)
seq1 <- rep(seq(1,5),50)
seq1 <- rep(seq(1,5),101)
seq3 <- seq1 + seq2
seq3
seq1 <- rep(seq(1,5),101)
seq2 <- rep(seq(0,1000,10),each=5)
seq3 <- seq1 + seq2
seq <- rep(seq(1,5),101) + rep(seq(0,1000,10),each=5)
x = c(5,3,0,4)
y = c(4,4,1,3)
lm1 = lm(y~x)
lm1
plot(x,y)
abline(lm1)
lm2 <- lm(0~1)
abline(lm2)
abline(lm2)
lm2
data("sleepstudy")
load(lme4)
install.packages("lme4")
load(lme4)
package(lme4)
library(lme4)
sleepstudy <- data("sleepstudy")
data("sleepstudy")
force(sleepstudy)
View(sleepstudy)
View(sleepstudy)
with(sleepstudy(plot(Days,Reaction)))
View(sleepstudy)
with(sleepstudy(plot(Days,Reaction)))
plot(sleepstudy$Days,sleepstudy$Reaction)
with(sleepstudy(plot(Days,Reaction)))
with(sleepstudy,plot(Days,Reaction))
plot(sleepstudy$Days,sleepstudy$Reaction)
aov1 <- anova(lm1)
lm1 <- lm(Reaction~Days, data = sleepstudy)
aov1 <- anova(lm1)
aov1
ggplot(sleepstudy, aes(x=Days, y=Reaction) + geom_point() + geom_smooth(method="lm"))
data("ggplot2")
library(ggplot2)
ggplot(sleepstudy, aes(x=Days, y=Reaction) + geom_point() + geom_smooth(method="lm"))
ggplot(sleepstudy, aes(x=Days, y=Reaction)) + geom_point() + geom_smooth(method="lm")
with(sleepstudy,plot(Days,Reaction)) # same function
ggplot(sleepstudy,aes(x=Days,y=Reaction)) + geom_smooth(method = "lm",level = 0.95) +
geom_point() + facet_wrap(~Subject, nrow = 3, ncol = 6)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
anova(lm1, lmer1)
anova(lm1, lmer1)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
sqrt(sum(residuals(lm1)^2)/(dim(sleepstudy)[1]-2))
sqrt(sum(resid(lmer1)^2)/(dim(sleepstudy)[1]-2))
dim(sleepstudy)[1]
anova(lm1, lmer1)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
lm1 <- lm(Reaction~Days, data = sleepstudy)
anova(lm1, lmer1)
lm1 <- lm(Reaction~Days, data = sleepstudy)
anova1 <- anova(lm1) # anova is the same thing as a linear model, just more interpretable
#   however, there are 2 issues with just running a simple linear model here
#   what are some of the assumptions behind the linear regression?
ggplot(sleepstudy,aes(x=Days,y=Reaction)) + geom_smooth(method = "lm",level = 0.95) +
geom_point() + facet_wrap(~Subject, nrow = 3, ncol = 6)
#   most individuals have an increasing RT but each subject differs in their SLOPE and INTERCEPT
#   how can we account for this?
#   this is where the concept of fixed and random effects become important
lm2 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
#   how can we evaluate how well each of these models fits our data?
RMSE1 <- sqrt(sum(residuals(lm1)^2)/(dim(sleepstudy)[1]-2))
RMSE2 <- sqrt(sum(resid(lm2)^2)/(dim(sleepstudy)[1]-2))
anova(lm1, lm2)
library(R.matlab)
library(ggplot2)
library(ggpubr)
#library(ggcorrplot)
library(nlme)
## Figure 2. Race Model Inequality per SOA
CDFs <- readMat("CDFs.mat") # Load CDFs.mat (created by Matlab script)
grandCDFs <- CDFs[["grandCDFs"]]
grandRaceModel <- CDFs[["grandRaceModel"]]
grandRMV <- CDFs[["grandRMV"]]
vesCDF <- as.matrix(grandCDFs[1,1,])
visCDF <- as.matrix(grandCDFs[1,7,])
# grandRMV <- CDFs[["grandRMV"]]
getwd()
setwd("D:/Data/Documents/")
ls
dir
setwd("D:/Data/Documents/Scripts/NBA2021/")
library(R.matlab)
library(ggplot2)
library(ggpubr)
library(nlme)
## Figure 2. Race Model Inequality per SOA
CDFs <- readMat("CDFs.mat") # Load CDFs.mat (created by Matlab script)
grandCDFs <- CDFs[["grandCDFs"]]
grandRaceModel <- CDFs[["grandRaceModel"]]
grandRMV <- CDFs[["grandRMV"]]
vesCDF <- as.matrix(grandCDFs[1,1,])
visCDF <- as.matrix(grandCDFs[1,7,])
## Figure 3. Grand RT and MR
data <- read.csv("React4Data.csv") # Load React4Data.csv (created by Matlab script: React4.m, bad subjects already removed)
n <- dim(data)[1]/7
# Calculating mean and standard error of RT, MR, RMV, and CRE
grandRT <- tapply(data$rt,data$soa,mean,na.rm=1)
grandRTse <- tapply(data$rt,data$soa,sd,na.rm=1)/sqrt(n)
grandMR <- tapply(data$mr,data$soa,mean,na.rm=1)
grandMRse <- tapply(data$mr,data$soa,sd,na.rm=1)/sqrt(n)
grandRMV <- tapply(data$rmv,data$soa,mean,na.rm=1)
grandRMVse <- tapply(data$rmv,data$soa,sd,na.rm=1)/sqrt(n)
grandMRE <- tapply(data$mre,data$soa,mean,na.rm=1)
grandMREse <- tapply(data$mre,data$soa,sd,na.rm=1)/sqrt(n)
grandSoa <- factor(c("-Inf","-100","-50","0","50","100","Inf"),levels=c("-Inf","-100","-50","0","50","100","Inf")) # manually order
grandCondition <- factor(c("Vestibular",rep("Combined",5),"Visual"),levels=c("Vestibular","Combined","Visual")) # manually order
grandMR_scaled <- (grandMR) * 1200 # scale MR by (x-50) * 10 to match the RT scale
grandMRse_scaled <- sqrt((grandMRse^2) * 1200^2) # scale MR by (x-50) * 10 to match the RT scale
grandData <- data.frame(grandRT,grandRTse,grandMR,grandMRse,grandMR_scaled,grandMRse_scaled,grandMRE,grandMREse,grandRMV,grandRMVse,grandSoa,grandCondition)
## Figure 3: Grand RT and MR
grandPlot <- ggplot(grandData,aes(x=grandSoa,y=grandRT,fill=grandSoa)) +
geom_errorbar(aes(ymin=grandMR_scaled-grandMRse_scaled, ymax=grandMR_scaled+grandMRse_scaled), width=0.15) +
geom_errorbar(aes(ymin=grandRT-grandRTse, ymax=grandRT+grandRTse), width=0.15) +
geom_col(colour="black",aes(y=grandMR_scaled)) +
geom_point(aes(shape=grandCondition),size=4) +
labs(x = "SOA (ms)", y = "Reaction Time (ms)") +
scale_shape_manual(name="Condition",labels=c("Vestibular Cue", "Combined (SOA)", "Visual Cue"),values=c(24,21,22)) +
scale_fill_manual(name="SOA (ms)",values=c("#F8766D","#F0F4C3", "#C5E1A5", "#9CCC65", "#689F38", "#33691E","#00BFC4")) +
scale_y_continuous(breaks = seq(600, 1200, by = 100), labels = c(600,"",800,"",1000,"",1200), limits = c(0,1200),
sec.axis=sec_axis(~ ., breaks = seq(0, 600, by = 120), labels=c(0,10,20,30,40,50), name = "Miss Rate (%)")) +
guides(fill=guide_legend(order=2,override.aes=list(shape=(c(24,21,21,21,21,21,22)), col=(c("#F8766D","#F0F4C3", "#C5E1A5", "#9CCC65", "#689F38", "#33691E","#00BFC4")))), shape=guide_legend(order=1)) +
theme_classic(base_size = 18) +
theme(legend.direction = "vertical", legend.position=c(0.5,0.82), legend.box="horizontal",
legend.key = element_rect(color="black",size=0.3,linetype="dotted"), text = element_text(size=32),axis.text = element_text(colour = "black"),legend.text=element_text(size=22, colour= "black"))
print(grandPlot)
# set variable classes in dataframe
data$sID <- as.factor(data$sID)
data$age<- as.integer(data$age)
data$gender<- as.factor(data$gender)
data$cond <- factor(data$cond,levels=c("Ves","Com","Vis"))
data$soa <- factor(data$soa,levels=c("-Inf","-100","-50","0","50","100","Inf"))
data$gameHr <- factor(data$gameHr,levels=c(1,2,3,4,5))
data$driveHr <- factor(data$driveHr,levels=c(1,2,3,4,5))
data$compHr <- factor(data$compHr,levels=c(1,2,3,4,5))
## Figure 4a: Age vs RT
ageRT <- ggplot(data, aes(x=age, y=rt, fill=soa)) +
geom_smooth(aes(colour=soa),method=lm,se=0) +
geom_point(colour="black",aes(shape=cond,fill=soa),size=4) +
scale_colour_manual(values=c("#F8766D","#F0F4C3", "#C5E1A5", "#9CCC65", "#689F38", "#33691E","#00BFC4"),guide=FALSE) +
scale_shape_manual(name="Condition",labels=c("Vestibular Cue", "Combined (SOA)", "Visual Cue"),values=c(24,21,22)) +
scale_fill_manual(name="SOA (ms)",labels=c("-Inf","-100","-50","0","50","100","Inf"),values=c("#F8766D","#F0F4C3", "#C5E1A5", "#9CCC65", "#689F38", "#33691E","#00BFC4")) +
guides(fill=guide_legend(override.aes=list(shape=(c(24,21,21,21,21,21,22))))) +
labs(x = "Age", y = "Reaction Time (ms)", tag="A") +
theme_classic2(base_size=17) +
theme(legend.direction = "vertical", legend.position=c(0.5,0.85), legend.box="horizontal", text = element_text(size=32),  legend.background = element_rect(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),  axis.line = element_line(colour = "grey30"), axis.text = element_text(colour = "black"), legend.text=element_text(size=22, colour= "black"))
print(ageRT)
lmm.rt <- lme(rt ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.rt)
anova(lmm.rt)
data$soa
options(contrasts=c("contr.sum","contr.poly"))
lmm.rt <- lme(rt ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.rt)
anova(lmm.rt)
