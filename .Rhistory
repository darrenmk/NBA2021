seq2 <- seq(0,10,10)
seq3 <- c(0,0,0,0,0,10,10,10,10,10)
seq1 <- rep(seq(1,5),2)
seq4 <- seq1 + seq3
seq1 <- rep(seq(1,5),100)
seq5 <- seq(0,1000,10)
rep(seq5,times=5)
rep(seq5,each=5)
seq2 <- seq(0,1000,by=10,each=5)
seq2 <- seq(0,1000,10,each=5)
seq1 <- seq(0,1000,10)
seq2 <- seq(seq1,each=5)
seq2 <- rep(seq(0,1000,10),each=5)
seq2 <- rep(seq(0,1000,10),each=5)
seq1 <- rep(seq(1,5),50)
seq1 <- rep(seq(1,5),101)
seq3 <- seq1 + seq2
seq3
seq1 <- rep(seq(1,5),101)
seq2 <- rep(seq(0,1000,10),each=5)
seq3 <- seq1 + seq2
seq <- rep(seq(1,5),101) + rep(seq(0,1000,10),each=5)
x = c(5,3,0,4)
y = c(4,4,1,3)
lm1 = lm(y~x)
lm1
plot(x,y)
abline(lm1)
lm2 <- lm(0~1)
abline(lm2)
abline(lm2)
lm2
data("sleepstudy")
load(lme4)
install.packages("lme4")
load(lme4)
package(lme4)
library(lme4)
sleepstudy <- data("sleepstudy")
data("sleepstudy")
force(sleepstudy)
View(sleepstudy)
View(sleepstudy)
with(sleepstudy(plot(Days,Reaction)))
View(sleepstudy)
with(sleepstudy(plot(Days,Reaction)))
plot(sleepstudy$Days,sleepstudy$Reaction)
with(sleepstudy(plot(Days,Reaction)))
with(sleepstudy,plot(Days,Reaction))
plot(sleepstudy$Days,sleepstudy$Reaction)
aov1 <- anova(lm1)
lm1 <- lm(Reaction~Days, data = sleepstudy)
aov1 <- anova(lm1)
aov1
ggplot(sleepstudy, aes(x=Days, y=Reaction) + geom_point() + geom_smooth(method="lm"))
data("ggplot2")
library(ggplot2)
ggplot(sleepstudy, aes(x=Days, y=Reaction) + geom_point() + geom_smooth(method="lm"))
ggplot(sleepstudy, aes(x=Days, y=Reaction)) + geom_point() + geom_smooth(method="lm")
with(sleepstudy,plot(Days,Reaction)) # same function
ggplot(sleepstudy,aes(x=Days,y=Reaction)) + geom_smooth(method = "lm",level = 0.95) +
geom_point() + facet_wrap(~Subject, nrow = 3, ncol = 6)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
anova(lm1, lmer1)
anova(lm1, lmer1)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
sqrt(sum(residuals(lm1)^2)/(dim(sleepstudy)[1]-2))
sqrt(sum(resid(lmer1)^2)/(dim(sleepstudy)[1]-2))
dim(sleepstudy)[1]
anova(lm1, lmer1)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
lm1 <- lm(Reaction~Days, data = sleepstudy)
anova(lm1, lmer1)
lm1 <- lm(Reaction~Days, data = sleepstudy)
anova1 <- anova(lm1) # anova is the same thing as a linear model, just more interpretable
#   however, there are 2 issues with just running a simple linear model here
#   what are some of the assumptions behind the linear regression?
ggplot(sleepstudy,aes(x=Days,y=Reaction)) + geom_smooth(method = "lm",level = 0.95) +
geom_point() + facet_wrap(~Subject, nrow = 3, ncol = 6)
#   most individuals have an increasing RT but each subject differs in their SLOPE and INTERCEPT
#   how can we account for this?
#   this is where the concept of fixed and random effects become important
lm2 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
#   how can we evaluate how well each of these models fits our data?
RMSE1 <- sqrt(sum(residuals(lm1)^2)/(dim(sleepstudy)[1]-2))
RMSE2 <- sqrt(sum(resid(lm2)^2)/(dim(sleepstudy)[1]-2))
anova(lm1, lm2)
lmm.rt <- lme(rt ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.rt)
setwd("D:/Data/Documents/Scripts/NBA2021/") # for Darren only, comment out
library(nlme)
data <- read.csv("React4Data.csv") # Load React4Data.csv (created by Matlab script: React4.m, bad subjects already removed)
n <- dim(data)[1]/7
## Stats for Figure 4
data$sID <- as.factor(data$sID)
data$age<- as.integer(data$age)
data$gender<- as.factor(data$gender)
data$cond <- factor(data$cond,levels=c("Ves","Com","Vis"))
data$soa <- factor(data$soa,levels=c("-Inf","-100","-50","0","50","100","Inf"))
data$gameHr <- as.integer(data$gameHr)
data$driveHr <- as.integer(data$driveHr)
data$compHr <- as.integer(data$compHr)
lmm.rt <- lme(rt ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.rt)
anova(lmm.rt)
summary(lmm.rt)
lmm.mr <- lme(mr ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.mr)
lmm.mr <- lme(mr*100 ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.mr)
dataSoa <- data[(data$soa != -Inf) & (data$soa != Inf),]
dataSoa$cond <- factor(dataSoa$cond,levels=c("Com"))
dataSoa$soa <- factor(dataSoa$soa,levels=c("-100","-50","0","50","100"))
lmm.rmv <- lme(rmv ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv)
lmm.mre <- lme(mre ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.mre)
anova(lmm.mre)
lmm.rmv <- lme(rmv ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv)
anova(lmm.rmv)
lmm.mre <- lme(mre ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.mre)
anova(lmm.mre)
22.79^2
c(4.667889^2,4.256903^2)
summary(lmm.rmv)
c(22.78876^2, 22.58677^2)
summary(lmm.rt)
c(143.6548^2, 93.05305^2)
summary(lmm.mr)
c(2.577394^2, 12.25024^2)
anova(lmm.mr)
# just RMV and age
lmm.rmv2 <- lme(rmv ~ age + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv2)
anova(lmm.rmv2)
summary(lmm.rmv2)
library(nlme)
data <- read.csv("React4Data.csv") # Load React4Data.csv (created by Matlab script: React4.m, bad subjects already removed)
n <- dim(data)[1]/7
View(data)
## Stats for Figure 4
data$sID <- as.factor(data$sID)
data$age<- as.integer(data$age)
data$gender<- as.factor(data$gender)
data$cond <- factor(data$cond,levels=c("Ves","Com","Vis"))
data$soa <- factor(data$soa,levels=c("-Inf","-100","-50","0","50","100","Inf"))
data$gameHr <- as.integer(data$gameHr)
data$driveHr <- as.integer(data$driveHr)
data$compHr <- as.integer(data$compHr)
## Stats for Figure 5
dataSoa <- data[(data$soa != -Inf) & (data$soa != Inf),]
dataSoa$cond <- factor(dataSoa$cond,levels=c("Com"))
dataSoa$soa <- factor(dataSoa$soa,levels=c("-100","-50","0","50","100"))
View(data)
View(data)
library(nlme)
data <- read.csv("React4Data.csv") # Load React4Data.csv (created by Matlab script: React4.m, bad subjects already removed)
n <- dim(data)[1]/7
View(data)
View(data)
data$compensation <- factor(data$compensation,levels=c("Declined","Credit","Money"))
data$compensation
lmm.rt <- lme(rt ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.rt)
anova(lmm.rt)
lmm.mr <- lme(mr*100 ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.mr)
anova(lmm.mr)
## Stats for Figure 5
dataSoa <- data[(data$soa != -Inf) & (data$soa != Inf),]
dataSoa$cond <- factor(dataSoa$cond,levels=c("Com"))
dataSoa$soa <- factor(dataSoa$soa,levels=c("-100","-50","0","50","100"))
lmm.rmv <- lme(rmv ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv)
anova(lmm.rmv)
lmm.mre <- lme(mre ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.mre)
anova(lmm.mre)
# just RMV and age
lmm.rmv2 <- lme(rmv ~ age + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv2)
compensation <- lme(rt ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(compensation)
anova(compensation)
summary(compensation)
# subset of participants
compensation <- lme(rt ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(compensation)
data$compensation <- factor(data$compensation,levels=c("Credit","Money","Declined"))
# subset of participants
compensation <- lme(rt ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(compensation)
compensation <- lme(rt ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(compensation)
anova(compensation)
compensation <- lme(rt ~ compensation, random = ~(1|age) + (1|sID), na.action = na.exclude, data = data)
summary(compensation)
compensation <- lme(rt ~ compensation, random = ~(1|age) + (1|sID), na.action = na.exclude, data = data)
compensation <- lme(rt ~ compensation, random = ~(1|age + sID), na.action = na.exclude, data = data)
summary(compensation)
compensation <- lme(rt ~ compensation, random = ~(1|age + sID), na.action = na.exclude, data = data)
compensation <- lme(rt ~ compensation, random = ~(1|sID), na.action = na.exclude, data = data)
compensation <- lme(rt ~ compensation, random = ~1|age*sID, na.action = na.exclude, data = data)
compensation <- lme(rt ~ compensation, random = list(~1|sID,~1|age), na.action = na.exclude, data = data)
summary(compensation)
compensation <- lme(rt ~ compensation, random = list(~1|age,~1|sID), na.action = na.exclude, data = data)
summary(compensation)
compensation <- lme(rt ~ compensation, random = list(1|age,1|sID), na.action = na.exclude, data = data)
compensation <- lme(rt ~ compensation, random = list(1|age,1|sID), na.action = na.exclude, data = data)
data$age
library(lme4)
compensation <- lme(rt ~ compensation, random = list(1|age,1|sID), na.action = na.exclude, data = data)
compensation <- lme(rt ~ compensation, random = list(~1|age,~1|sID), na.action = na.exclude, data = data)
compensation <- lme(rt ~ compensation, random = list(~1|age,1|sID), na.action = na.exclude, data = data)
compensation <- lme(rt ~ compensation, random = list(~1|age,~1|sID), na.action = na.exclude, data = data)
summary(compensation)
compensation <- lme(rt ~ compensation, random = list(~1|sID,~1|age), na.action = na.exclude, data = data)
summary(compensation)
compensation <- lme(rt ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(compensation)
data$compensation <- factor(data$compensation,levels=c("Money","Credit","Declined"))
compensation <- lme(rt ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(compensation)
summary(compensation)
anova(compensation)
compensation <- lme(mr ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(compensation)
anova(compensation)
summary(compensation)
summary(compensation)
anova(compensation)
compensation <- lme(rmv ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(compensation)
anova(compensation)
comp.rmv <- lme(rmv ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(comp.rmv)
anova(comp.rmv)
comp.mre <- lme(mre ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(comp.mre)
anova(comp.mre)
comp.rmv <- lme(rmv ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(comp.rmv)
anova(comp.rmv)
anova(comp.rt)
anova(comp.rt)
summary(comp.rt)
# Control analyses: effect of compensation
comp.rt <- lme(rt ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(comp.rt)
anova(comp.rt)
# Control analyses: effect of compensation
comp.rt <- lme(rt ~ compensation + age:compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(comp.rt)
anova(comp.rt)
comp.rt <- lme(rt ~ age*compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(comp.rt)
anova(comp.rt)
comp.rt <- lme(rt ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(comp.rt)
anova(comp.rt)
comp.mr <- lme(mr ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(comp.mr)
anova(comp.mr)
# Control analyses: effect of compensation
comp.rt <- lme(rt ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(comp.rt)
anova(comp.rt)
summary(comp.rt)
summary(comp.mr)
anova(comp.rt)
comp.mr <- lme(mr ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(comp.mr)
anova(comp.mr)
comp.rmv <- lme(rmv ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(comp.rmv)
anova(comp.rmv)
comp.mre <- lme(mre ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(comp.mre)
anova(comp.mre)
# Control analyses: effect of compensation
comp.rt <- lme(rt ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = data)
summary(comp.rt)
anova(comp.rt)
comp.mr <- lme(mr ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = data)
anova(comp.mr)
comp.rmv <- lme(rmv ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = dataSoa)
anova(comp.rmv)
comp.mre <- lme(mre ~ age+compensation, random = ~1|sID, na.action = na.exclude, data = dataSoa)
anova(comp.mre)
# Control analysis 3.3.2. High miss rate in vestibular-only condition (>= 80%)
highVMR <- rep(data$mr[data$soa==-Inf] >= 0.8, each=7) # get subjects with vestibular MR >= 80%
myVis <- data$rt[highVMR & data$soa==Inf] # vis RTs for high VMR subjects
mySoa <- t(matrix(data$rt[highVMR & data$soa!=-Inf & data$soa!=Inf],nrow=5)) # soa RTs for high VMR subjects
myDiff <- mySoa - myVis # diff in SOA RT and vis RT, negative = soa RT is faster
myNeg <- myDiff < 0 # check if negative
myNeg
mySoa
mySoa[,1]
vmr <- rep(data$mr[data$soa==-Inf] >= 0.8, each=7) # get subjects with high vestibular MR >= 80%
vmrVis <- data$rt[highVMR & data$soa==Inf] # get vis-only RTs for this subset of participants
vmrSOA <- t(matrix(data$rt[highVMR & data$soa!=-Inf & data$soa!=Inf],nrow=5)) # get soa RTs this subset...
vmr <- rep(data$mr[data$soa==-Inf] >= 0.8, each=7) # get subjects with high vestibular MR >= 80%
vmrVisRT <- data$rt[highVMR & data$soa==Inf] # get vis-only RTs for this subset of participants
vmrSOART <- t(matrix(data$rt[highVMR & data$soa!=-Inf & data$soa!=Inf],nrow=5)) # get soa RTs this subset...
vmrSOART <- mean(t(matrix(data$rt[highVMR & data$soa!=-Inf & data$soa!=Inf],nrow=5))) # get soa RTs this subset...
vmrSOART <- rowMeans(t(matrix(data$rt[highVMR & data$soa!=-Inf & data$soa!=Inf],nrow=5))) # get soa RTs this subset...
vmrTTest <- t.test(vmrVisRT, vmrSOART)
vmrTTest
vmrT <- t.test(vmrVisRT, vmrSOART)
vmrT <- t.test(vmrVisRT, vmrSOART, alternative = "greater")
vmrT
vmrT <- t.test(vmrVisRT, vmrSOART, alternative = "lesser")
vmrT <- t.test(vmrVisRT, vmrSOART, alternative = "less")
vmrT
vmrT <- t.test(vmrVisRT, vmrSOART, alternative = "greater")
vmrT <- t.test(vmrVisRT, vmrSOART, alternative = "greater")
vmrT
vmrSOART <- t(matrix(data$rt[highVMR & data$soa!=-Inf & data$soa!=Inf],nrow=5)) # get soa RTs this subset...
vmrSOART
vmrT <- t.test(vmrVisRT, vmrSOART, alternative = "greater")
vmrT
vmrSOART[,1] <- vmrSOART[,1] - 100 # adjust for vis 100 ms late
vmrSOART[,2] <- vmrSOART[,2] - 50 # adjust for vis 50 ms late
vmrSOART <- t(matrix(data$rt[highVMR & data$soa!=-Inf & data$soa!=Inf],nrow=5)) # get soa RTs this subset...
vmrSOART[,1] <- vmrSOART[,1] - 100 # adjust for vis 100 ms late
vmrSOART[,2] <- vmrSOART[,2] - 50 # adjust for vis 50 ms late
vmrSOART
vmrT <- t.test(vmrVisRT, vmrSOART, alternative = "greater")
vmrT <- t.test(vmrSOART, vmrVisRT, alternative = "less")
vmrT
lmm.rmv <- lme(rmv ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv)
anova(lmm.rmv)
summary(lmm.rmv)
anova(lmm.rmv)
lmm.mre <- lme(mre ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.mre)
anova(lmm.mre)
summary(lmm.rt)
anova(lmm.rt)
summary(lmm.rt)
summary(lm(rt~age,data=data))
summary(lm(mr~age,data=data))
summary(lm(mr~age/soa,data=data))
summary(lm(mr~age*soa,data=data))
summary(lm(mr~age*soa,data=data))
summary(lm(mr~age,data=data))
summary(lm(rmv~age,data=dataSoa))
summary(lm(mre~age,data=dataSoa))
summary(lm(rmv~age,data=dataSoa))
summary(lm(mre~age,data=dataSoa))
summary(lm(rmv~age,data=dataSoa))
summary(lm(rmv~age + gameHr + driveHr + compHr,data=dataSoa))
summary(lm(rmv~age,data=dataSoa))
lmm.rmv <- lme(rmv ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv)
anova(lmm.rmv)
summary(lmm.rmv)
lm(rt~age, data=data)
a<-lm(rt~age, data=data)
a
summary(a)
??r2_nakagawa
install.packages("performance")
library(performance)
lmm.rt <- lme(rt ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.rt)
anova(lmm.rt)
r2_nakagawa(lmm.rt)
lmm.rt <- lme(rt ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.rt)
anova(lmm.rt)
r2_nakagawa(lmm.rt)
install.packages("psycho")
library(psycho)
R2_nakagawa(lmm.rt)
library(psycho)
R2_nakagawa(lmm.rt)
??r2_nakagawa
??R2_nakagawa
lmm.mr <- lme(mr*100 ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.mr)
anova(lmm.mr)
r2_nakagawa(lmm.mr)
r2_nakagawa(lmm.mr)
summary(lmm.mr)
library(nlme)
library(performance)
data <- read.csv("React4Data.csv") # Load React4Data.csv (created by Matlab script: React4.m, bad subjects already removed)
n <- dim(data)[1]/7
## Stats for Figure 4
data$sID <- as.factor(data$sID)
data$age<- as.integer(data$age)
data$gender<- as.factor(data$gender)
data$cond <- factor(data$cond,levels=c("Ves","Com","Vis"))
data$soa <- factor(data$soa,levels=c("-Inf","-100","-50","0","50","100","Inf"))
data$gameHr <- as.integer(data$gameHr)
data$driveHr <- as.integer(data$driveHr)
data$compHr <- as.integer(data$compHr)
data$compensation <- factor(data$compensation,levels=c("Money","Credit","Declined"))
data$mr <- data$mr * 100
lmm.mr <- lme(mr ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.mr)
anova(lmm.mr)
r2_nakagawa(lmm.mr)
r2_nakagawa(lmm.rt)
## Stats for Figure 5
dataSoa <- data[(data$soa != -Inf) & (data$soa != Inf),]
dataSoa$cond <- factor(dataSoa$cond,levels=c("Com"))
dataSoa$soa <- factor(dataSoa$soa,levels=c("-100","-50","0","50","100"))
lmm.rmv <- lme(rmv ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv)
anova(lmm.rmv)
r2_nakagawa(lmm.rmv)
r2_nakagawa(lmm.mre)
data <- read.csv("React4Data.csv") # Load React4Data.csv (created by Matlab script: React4.m, bad subjects already removed)
n <- dim(data)[1]/7
View(data)
lmm.mr <- lme(mr ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.mr)
anova(lmm.mr)
r2_nakagawa(lmm.mr)
summary(lmm.rt)
summary(lm(rt~age,data=data))
summary(lmr(rt~age,random=~1|sID,data=data))
summary(lme(rt~age,random=~1|sID,data=data))
summary(lme(rt~age,random=~1|sID,na.action=na.remove,data=data))
summary(lme(rt~age,random=~1|sID,na.action=na.exclude,data=data))
install.packages("simr")
powerSim(lmm.rt,nsim=200)
??powerSim
library(simr)
library(simr)
powerSim(lmm.rt,nsim=200)
powerSim(lme(rt~age,random=~1|sID,na.action=na.exclude,data=data),nsim=200)
powerSim(lmm.rt2,nsim=200)
lmm.rt2 <- lme(rt~age,random=~1|sID, na.action=na.exclude, data=data)
powerSim(lmm.rt2,nsim=200)
summary(lmm.rt2)
sim.rt2 <- powerSim(lmm.rt2,nsim=200)
sim.rt2
sim.rt2 <- powerSim(lmm.rt2,nsim=200)
sim.rt2
sim.rt2[1]
sim.rt2 <- powerSim(lmm.rt2,nsim=20)
sim.rt2
library(nlme)
library(lme4)
library(simr)
lmm.rt2 <- lmer(rt~age+(1|sID), data=data)
summary(lmm.rt2)
sim.rt2 <- powerSim(lmm.rt2,nsim=20)
sim.rt2
lmm.rt2 <- lmer(rt ~ age*soa + (1|sID), data=data)
summary(lmm.rt2)
sim.rt2 <- powerSim(lmm.rt2,nsim=20)
sim.rt2
summary(lmm.rt2)
sim.rt2 <- powerSim(lmm.rt2,nsim=100)
summary(lmm.rt2)
sim.rt2
lmm.rmv2 <- lmer(rmv ~ age + (1|sID), data=dataSoa)
summary(lmm.rmv2)
sim.rmv2 <- powerSim(lmm.rmv2,nsim=100)
sim.rmv2
summary(lmm.rmv2)
lmm.rmv2 <- lmer(rmv ~ age + gameHr + driveHr + compHr + (1|sID), data=dataSoa)
summary(lmm.rmv2)
sim.rmv2 <- powerSim(lmm.rmv2,nsim=100)
sim.rmv2
summary(lmm.rmv2)
lmm.rt2 <- lmer(rt ~ age + gameHr + driveHr + compHr + (1|sID), data=data)
summary(lmm.rt2)
sim.rt2 <- powerSim(lmm.rt2,nsim=100)
summary(lmm.rt2)
sim.rt2
lmm.rt2 <- lmer(rt ~ age + gameHr + driveHr + compHr + (1|sID), data=data)
summary(lmm.rt2)
lmm.rmv2 <- lme(rmv ~ age + gameHr + driveHr + compHr, random = ~1|sID, data=dataSoa)
summary(lmm.rmv2)
sim.rmv2 <- powerSim(lmm.rmv2,nsim=100)
sim.rmv2
lmm.rmv2 <- lme(rmv ~ age + gameHr + driveHr + compHr, random=~1|sID, data=dataSoa)
summary(lmm.rmv2)
lmm.rt <- lme(rt ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = data)
summary(lmm.rt)
anova(lmm.rt)
lmm.rt2 <- lmer(rt ~ age + gameHr + driveHr + compHr + (1|sID), data=data)
summary(lmm.rt2)
sim.rt2 <- powerSim(lmm.rt2,nsim=1000)
sim.rt2
## Stats for Figure 5
dataSoa <- data[(data$soa != -Inf) & (data$soa != Inf),]
dataSoa$cond <- factor(dataSoa$cond,levels=c("Com"))
dataSoa$soa <- factor(dataSoa$soa,levels=c("-100","-50","0","50","100"))
lmm.rmv <- lme(rmv ~ age*soa + gameHr + driveHr + compHr, random = ~1|sID, na.action = na.exclude, data = dataSoa)
summary(lmm.rmv)
anova(lmm.rmv)
lmm.rmv2 <- lme(rmv ~ age + gameHr + driveHr + compHr, random=~1|sID, data=dataSoa)
summary(lmm.rmv2)
lmm.rmv3 <- lmer(rmv ~ age + gameHr + driveHr + compHr + (1|sID), data=dataSoa)
summary(lmm.rmv3)
sim.rmv3 <- powerSim(lmm.rmv3,nsim=1000)
sim.rmv3
sim.rt2
lmm.rmv2 <- lme(rmv ~ age*soa + gameHr + driveHr + compHr, random=~1|sID, data=dataSoa)
summary(lmm.rmv2)
lmm.rmv2 <- lme(rmv ~ age + gameHr + driveHr + compHr, random=~1|sID, data=dataSoa)
summary(lmm.rmv2)
