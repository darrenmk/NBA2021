citation("tidyverse")
citation("ggplot2")
seq(1,10,2)
seq(1,5)
seq(0,1000,10)
length(seq(0,1000,10))
seq2 <- seq(0,10,10)
seq()
seq2
seq1 <- seq(1,5)
seq1+seq2
seq2 <- rep(seq(1,10,10)5)
seq2 <- rep(seq(1,10,10),5)
seq2 <- rep(seq(0,10,10),5)
seq2 <- seq(0,10,10)
seq3 <- c(0,0,0,0,0,10,10,10,10,10)
seq1 <- rep(seq(1,5),2)
seq4 <- seq1 + seq3
seq1 <- rep(seq(1,5),100)
seq5 <- seq(0,1000,10)
rep(seq5,times=5)
rep(seq5,each=5)
seq2 <- seq(0,1000,by=10,each=5)
seq2 <- seq(0,1000,10,each=5)
seq1 <- seq(0,1000,10)
seq2 <- seq(seq1,each=5)
seq2 <- rep(seq(0,1000,10),each=5)
seq2 <- rep(seq(0,1000,10),each=5)
seq1 <- rep(seq(1,5),50)
seq1 <- rep(seq(1,5),101)
seq3 <- seq1 + seq2
seq3
seq1 <- rep(seq(1,5),101)
seq2 <- rep(seq(0,1000,10),each=5)
seq3 <- seq1 + seq2
seq <- rep(seq(1,5),101) + rep(seq(0,1000,10),each=5)
x = c(5,3,0,4)
y = c(4,4,1,3)
lm1 = lm(y~x)
lm1
plot(x,y)
abline(lm1)
lm2 <- lm(0~1)
abline(lm2)
abline(lm2)
lm2
data("sleepstudy")
load(lme4)
install.packages("lme4")
load(lme4)
package(lme4)
library(lme4)
sleepstudy <- data("sleepstudy")
data("sleepstudy")
force(sleepstudy)
View(sleepstudy)
View(sleepstudy)
with(sleepstudy(plot(Days,Reaction)))
View(sleepstudy)
with(sleepstudy(plot(Days,Reaction)))
plot(sleepstudy$Days,sleepstudy$Reaction)
with(sleepstudy(plot(Days,Reaction)))
with(sleepstudy,plot(Days,Reaction))
plot(sleepstudy$Days,sleepstudy$Reaction)
aov1 <- anova(lm1)
lm1 <- lm(Reaction~Days, data = sleepstudy)
aov1 <- anova(lm1)
aov1
ggplot(sleepstudy, aes(x=Days, y=Reaction) + geom_point() + geom_smooth(method="lm"))
data("ggplot2")
library(ggplot2)
ggplot(sleepstudy, aes(x=Days, y=Reaction) + geom_point() + geom_smooth(method="lm"))
ggplot(sleepstudy, aes(x=Days, y=Reaction)) + geom_point() + geom_smooth(method="lm")
with(sleepstudy,plot(Days,Reaction)) # same function
ggplot(sleepstudy,aes(x=Days,y=Reaction)) + geom_smooth(method = "lm",level = 0.95) +
geom_point() + facet_wrap(~Subject, nrow = 3, ncol = 6)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
anova(lm1, lmer1)
anova(lm1, lmer1)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
sqrt(sum(residuals(lm1)^2)/(dim(sleepstudy)[1]-2))
sqrt(sum(resid(lmer1)^2)/(dim(sleepstudy)[1]-2))
dim(sleepstudy)[1]
anova(lm1, lmer1)
lmer1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
lm1 <- lm(Reaction~Days, data = sleepstudy)
anova(lm1, lmer1)
lm1 <- lm(Reaction~Days, data = sleepstudy)
anova1 <- anova(lm1) # anova is the same thing as a linear model, just more interpretable
#   however, there are 2 issues with just running a simple linear model here
#   what are some of the assumptions behind the linear regression?
ggplot(sleepstudy,aes(x=Days,y=Reaction)) + geom_smooth(method = "lm",level = 0.95) +
geom_point() + facet_wrap(~Subject, nrow = 3, ncol = 6)
#   most individuals have an increasing RT but each subject differs in their SLOPE and INTERCEPT
#   how can we account for this?
#   this is where the concept of fixed and random effects become important
lm2 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = FALSE)
#   how can we evaluate how well each of these models fits our data?
RMSE1 <- sqrt(sum(residuals(lm1)^2)/(dim(sleepstudy)[1]-2))
RMSE2 <- sqrt(sum(resid(lm2)^2)/(dim(sleepstudy)[1]-2))
anova(lm1, lm2)
setwd("D:/Data/Documents/Scripts/NBA2021/") # for Darren only, comment out
library(R.matlab)
library(ggplot2)
## Figure 2. Race Model Inequality per SOA
CDFs <- readMat("CDFs.mat") # Load CDFs.mat (created by Matlab script)
grandCDFs <- CDFs[["grandCDFs"]]
grandRaceModel <- CDFs[["grandRaceModel"]]
grandVA <- CDFs[["grandVA"]]
vesCDF <- as.matrix(grandCDFs[1,1,])
visCDF <- as.matrix(grandCDFs[1,7,])
# grandVA <- CDFs[["grandVA"]]
# Import CDF data into a dataframe
cdfData <- data.frame("timecourse" = t(CDFs[["timecourse"]]), "vesCDF" = vesCDF, "ves50CDF" = as.matrix(c(rep(0,500), vesCDF[1:29501,1])), "ves100CDF" = as.matrix(c(rep(0,1000), vesCDF[1:29001,1])), "visCDF" = visCDF, "vis50CDF" = as.matrix(c(rep(0,500), visCDF[1:29501,1])), "vis100CDF" = as.matrix(c(rep(0,1000), visCDF[1:29001,1])), "soa1CDF" = as.matrix(grandCDFs[1,2,]), "soa2CDF" = as.matrix(grandCDFs[1,3,]), "soa3CDF" = as.matrix(grandCDFs[1,4,]), "soa4CDF" = as.matrix(grandCDFs[1,5,]), "soa5CDF" = as.matrix(grandCDFs[1,6,]), "race1CDF" = as.matrix(grandRaceModel[1,1,]), "race2CDF" = as.matrix(grandRaceModel[1,2,]), "race3CDF" = as.matrix(grandRaceModel[1,3,]), "race4CDF" = as.matrix(grandRaceModel[1,4,]), "race5CDF" = as.matrix(grandRaceModel[1,5,]))
## Figure 2a: -100 ms SOA
cdfPlot1 <- ggplot(cdfData, aes(x=timecourse)) +
geom_line(aes(y=vesCDF,group="A",colour="A")) +
geom_line(aes(y=soa1CDF,group="B",colour="B")) +
geom_line(aes(y=vis100CDF,group="C",colour="C")) +
geom_line(aes(y=race1CDF,group="D",colour="D")) +
geom_ribbon(data=subset(cdfData, 0 <= cdfData & cdfData <= 920), aes(ymin=race1CDF, ymax=soa1CDF), fill="grey80") +
labs(tag="A", x="Time (ms)", y="P(response)") +
annotate("text",x=100,y=0.99,label="SOA: -100 ms",size=4,fontface="bold") +
annotate("text",x=100,y=0.9,label=paste("VA:",round(grandVA[1],1),"ms",sep=" "),size=4) +
scale_colour_discrete(name="Condition",labels=c("Vestibular Cue","Combined","Visual Cue","Race Model Inequality"),guide=guide_legend(nrow=4)) +
scale_x_continuous(breaks=seq(0,2000,by=200), limits=c(0,2000)) +
theme_classic() +
theme(legend.position="none")
print(cdfPlot1)
## Figure 2c: 0 ms SOA
cdfPlot3 <- ggplot(cdfData, aes(x=timecourse)) +
geom_line(aes(y=vesCDF,group="A",colour="A")) +
geom_line(aes(y=soa3CDF,group="B",colour="B")) +
geom_line(aes(y=visCDF,group="C",colour="C")) +
geom_line(aes(y=race3CDF,group="D",colour="D")) +
geom_ribbon(data=subset(cdfData, 0 <= cdfData & cdfData <= 840), aes(ymin=race3CDF, ymax=soa3CDF), fill="grey80") +
labs(tag="B", x="Time (ms)", y="P(response)") +
annotate("text",x=100,y=0.99,label="SOA: 0 ms",size=4,fontface="bold") +
annotate("text",x=100,y=0.9,label=paste("VA:",round(grandVA[3],1),"ms",sep=" "),size=4) +
scale_colour_discrete(name="Condition",labels=c("Vestibular Cue","Combined","Visual Cue","Race Model Inequality"),guide=guide_legend(nrow=4)) +
scale_x_continuous(breaks=seq(0,2000,by=200), limits=c(0,2000)) +
theme_classic() +
theme(legend.position=c(0.9,0.5))
print(cdfPlot3)
## Figure 2e: 100 ms SOA
cdfPlot5 <- ggplot(cdfData, aes(x=timecourse)) +
geom_line(aes(y=ves100CDF,group="A",colour="A")) +
geom_line(aes(y=soa5CDF,group="B",colour="B")) +
geom_line(aes(y=visCDF,group="C",colour="C")) +
geom_line(aes(y=race5CDF,group="D",colour="D")) +
geom_ribbon(data=subset(cdfData, 0 <= cdfData & cdfData <= 860), aes(ymin=race5CDF, ymax=soa5CDF), fill="grey80") +
labs(tag="C", x="Time (ms)", y="P(response)") +
annotate("text",x=100,y=0.99,label="SOA: 100 ms",size=4,fontface="bold") +
annotate("text",x=100,y=0.9,label=paste("VA:",round(grandVA[5],1),"ms",sep=" "),size=4) +
scale_colour_discrete(name="Condition",labels=c("Vestibular Cue (100ms delay)","Combined (100ms SOA)","Visual Cue","Race Model Inequality"),guide=guide_legend(nrow=4)) +
scale_x_continuous(breaks=seq(0,2000,by=200), limits=c(0,2000)) +
theme_classic() +
theme(legend.position="none")
print(cdfPlot5)
ggarrange(cdfPlot1, cdfPlot3, cdfPlot5)
